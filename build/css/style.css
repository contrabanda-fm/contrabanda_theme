/*!********************************************************************************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[3]!./src/scss/index.scss ***!
  \********************************************************************************************************************************************************************************************************************************************/
@import url(https://fonts.googleapis.com/css2?family=Kanit:wght@300;400;500;600;700&display=swap);
/*!************************************************************************************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[3]!./src/scss/index.scss (1) ***!
  \************************************************************************************************************************************************************************************************************************************************/
.contrabanda-theme {
  font-family: "Kanit";
}
.contrabanda-theme.orange a, .contrabanda-theme.orange a:hover {
  color: #BA3800;
}
.contrabanda-theme.orange .navbar-light .navbar-nav .nav-link {
  color: #BA3800;
  font-weight: 500;
}
.contrabanda-theme.orange .navbar-light .navbar-nav .nav-link:hover {
  color: #BA3800;
}
.contrabanda-theme.pink a, .contrabanda-theme.pink a:hover {
  color: #AB0571;
}
.contrabanda-theme.pink .navbar-light .navbar-nav .nav-link {
  color: #AB0571;
  font-weight: 500;
}
.contrabanda-theme.pink .navbar-light .navbar-nav .nav-link:hover {
  color: #AB0571;
}
.contrabanda-theme.blue a, .contrabanda-theme.blue a:hover {
  color: #003C8F;
}
.contrabanda-theme.blue .navbar-light .navbar-nav .nav-link {
  color: #003C8F;
  font-weight: 500;
}
.contrabanda-theme.blue .navbar-light .navbar-nav .nav-link:hover {
  color: #003C8F;
}
.contrabanda-theme.green a, .contrabanda-theme.green a:hover {
  color: #218F00;
}
.contrabanda-theme.green .navbar-light .navbar-nav .nav-link {
  color: #218F00;
  font-weight: 500;
}
.contrabanda-theme.green .navbar-light .navbar-nav .nav-link:hover {
  color: #218F00;
}
.contrabanda-theme.red a, .contrabanda-theme.red a:hover {
  color: #940000;
}
.contrabanda-theme.red .navbar-light .navbar-nav .nav-link {
  color: #940000;
  font-weight: 500;
}
.contrabanda-theme.red .navbar-light .navbar-nav .nav-link:hover {
  color: #940000;
}
.contrabanda-theme.purple a, .contrabanda-theme.purple a:hover {
  color: #7900BA;
}
.contrabanda-theme.purple .navbar-light .navbar-nav .nav-link {
  color: #7900BA;
  font-weight: 500;
}
.contrabanda-theme.purple .navbar-light .navbar-nav .nav-link:hover {
  color: #7900BA;
}
.contrabanda-theme a, .contrabanda-theme a:hover {
  color: #333;
  font-weight: 400;
}
.contrabanda-theme .nowplaying {
  display: flex;
  justify-content: space-between;
  font-size: 12px;
  max-width: 300px;
}
.contrabanda-theme .site-branding {
  justify-content: space-between;
}
.contrabanda-theme .site-title {
  min-width: 390px;
}
.contrabanda-theme .site-title-heading {
  text-transform: uppercase;
  letter-spacing: -2px;
}
.contrabanda-theme .site-title-heading a, .contrabanda-theme .site-title-heading a:hover {
  font-weight: 600;
}
.contrabanda-theme .site-title .site-description {
  color: #000;
}
.contrabanda-theme .page-header-top-right {
  max-width: 300px;
}
.contrabanda-theme .language-chooser {
  padding: 0;
  border-top: solid 1px #ddd;
}
@media only screen and (min-width: 992px) {
  .contrabanda-theme .language-chooser {
    display: flex;
    border-top: none;
  }
}
.contrabanda-theme .language-chooser li {
  list-style: none;
  padding: 0.5rem;
  border: none;
}
.contrabanda-theme .language-chooser li.active {
  opacity: 0.5;
}
.contrabanda-theme .language-chooser li a {
  font-weight: 500;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/